/*
 * SetBlocks.java
 *
 * Created on 17. Dezember 2007, 13:23
 */
package multidstrukt;

import java.util.ArrayList;
import javax.swing.*;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;
import org.jdesktop.application.Action;

/**
 * Fenster zum Setzen der variablen Blockgroessen
 * @author  hagedorn, khadikov
 */
public class SetBlocks extends javax.swing.JDialog implements TableModelListener {

    /** Creates new form SetBlocks */
    public SetBlocks(java.awt.Frame parent, boolean modal, int count, int current) {
        super(parent, modal);

        this.count = count;
        this.current=current;
        this.size = MultiDstruktApp.getApplication().getIDC().dimension[current].getSize();
        Object[][] table = new Object[count][2];
        for (int i = 0; i < count - 1; i++) {
            Object[] tmp = {"Block " + (i + 1), new Integer(0)};
            table[i] = tmp;
        }
        Object[] tmp = {"Block " + count, new Integer(size)};
        table[count - 1] = tmp;
        this.tableArray = table;

        initComponents();
        this.jTable1.getModel().addTableModelListener(this);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(multidstrukt.MultiDstruktApp.class).getContext().getResourceMap(SetBlocks.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            this.tableArray,new String [] {
                "Block Number", "Size"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                if (rowIndex==count-1){
                    return false;
                }
                return canEdit [columnIndex];
            }
        });
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(multidstrukt.MultiDstruktApp.class).getContext().getActionMap(SetBlocks.class, this);
        okButton.setAction(actionMap.get("pressOKButton")); // NOI18N
        okButton.setText(resourceMap.getString("okButton.text")); // NOI18N
        okButton.setToolTipText(resourceMap.getString("okButton.toolTipText")); // NOI18N
        okButton.setName("okButton"); // NOI18N

        cancelButton.setAction(actionMap.get("close")); // NOI18N
        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setToolTipText(resourceMap.getString("cancelButton.toolTipText")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                SetBlocks dialog = new SetBlocks(new javax.swing.JFrame(), true, 0, 0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    @Action
    public void pressOKButton() throws Throwable {
        if ((Integer) jTable1.getValueAt(count - 1, 1) < 0) 
        {
            JOptionPane.showMessageDialog(MultiDstruktApp.getApplication().getMainFrame(),"The sum of the block sizes is greater than the dimension size!","Incorrect Blocksizes", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Object[] variableBlocks = MultiDstruktApp.getApplication().variableBlocks;
        ArrayList<Integer> blockSizes = new ArrayList<Integer>();
        if (variableBlocks == null) {
            variableBlocks = new Object[MultiDstruktApp.getApplication().getIDC().getShape().length];
        }
        for (int i = 0; i < this.count; i++) {
            if ((Integer) jTable1.getValueAt(i, 1) > 0) {
                blockSizes.add((Integer) jTable1.getValueAt(i, 1));
            }
        }
        int[] values=new int[blockSizes.size()];
        for (int i=0;i<values.length;i++)
            values[i]=((Integer)blockSizes.get(i)).intValue();
        variableBlocks[this.current]=values;
        MultiDstruktApp.getApplication().variableBlocks=variableBlocks;
        this.dispose();
        this.finalize();
    }
    @Action 
    public void close() throws Throwable{
        this.dispose();
        this.finalize();
    }

    public void tableChanged(TableModelEvent e) {
        int row = e.getFirstRow();
        int column = e.getColumn();
        if (row == count - 1) {
            return;
        }
        TableModel model = (TableModel) e.getSource();
        String columnName = model.getColumnName(column);
        Object data = model.getValueAt(row, column);
        int value = -1;
        try {
            value = ((Integer) data).intValue();
        } catch (Exception exc) {
        }
        int sum = 0;
        for (int i = 0; i < count - 1; i++) {
            sum += (Integer) model.getValueAt(i, 1);
        }
        if (value < 0) {
            model.setValueAt(0, row, column);
        } else {
            model.setValueAt(this.size - sum, count - 1, 1);
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
    private int count;
    private int size;
    private int current;
    private Object[][] tableArray;
}
